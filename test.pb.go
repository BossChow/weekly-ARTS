// Code generated by protoc-gen-go. DO NOT EDIT.
// source: test.proto

package example

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FOO int32

const (
	FOO_X FOO = 17
)

var FOO_name = map[int32]string{
	17: "X",
}

var FOO_value = map[string]int32{
	"X": 17,
}

func (x FOO) Enum() *FOO {
	p := new(FOO)
	*p = x
	return p
}

func (x FOO) String() string {
	return proto.EnumName(FOO_name, int32(x))
}

func (x *FOO) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(FOO_value, data, "FOO")
	if err != nil {
		return err
	}
	*x = FOO(value)
	return nil
}

func (FOO) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c161fcfdc0c3ff1e, []int{0}
}

type Test struct {
	Label         *string             `protobuf:"bytes,1,req,name=label" json:"label,omitempty"`
	Type          *int32              `protobuf:"varint,2,opt,name=type,def=77" json:"type,omitempty"`
	Reps          []int64             `protobuf:"varint,3,rep,name=reps" json:"reps,omitempty"`
	Optionalgroup *Test_OptionalGroup `protobuf:"group,4,opt,name=OptionalGroup,json=optionalgroup" json:"optionalgroup,omitempty"`
	// Types that are valid to be assigned to Union:
	//	*Test_Number
	//	*Test_Name
	Union                isTest_Union `protobuf_oneof:"union"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Test) Reset()         { *m = Test{} }
func (m *Test) String() string { return proto.CompactTextString(m) }
func (*Test) ProtoMessage()    {}
func (*Test) Descriptor() ([]byte, []int) {
	return fileDescriptor_c161fcfdc0c3ff1e, []int{0}
}

func (m *Test) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Test.Unmarshal(m, b)
}
func (m *Test) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Test.Marshal(b, m, deterministic)
}
func (m *Test) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Test.Merge(m, src)
}
func (m *Test) XXX_Size() int {
	return xxx_messageInfo_Test.Size(m)
}
func (m *Test) XXX_DiscardUnknown() {
	xxx_messageInfo_Test.DiscardUnknown(m)
}

var xxx_messageInfo_Test proto.InternalMessageInfo

const Default_Test_Type int32 = 77

func (m *Test) GetLabel() string {
	if m != nil && m.Label != nil {
		return *m.Label
	}
	return ""
}

func (m *Test) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_Test_Type
}

func (m *Test) GetReps() []int64 {
	if m != nil {
		return m.Reps
	}
	return nil
}

func (m *Test) GetOptionalgroup() *Test_OptionalGroup {
	if m != nil {
		return m.Optionalgroup
	}
	return nil
}

type isTest_Union interface {
	isTest_Union()
}

type Test_Number struct {
	Number int32 `protobuf:"varint,6,opt,name=number,oneof"`
}

type Test_Name struct {
	Name string `protobuf:"bytes,7,opt,name=name,oneof"`
}

func (*Test_Number) isTest_Union() {}

func (*Test_Name) isTest_Union() {}

func (m *Test) GetUnion() isTest_Union {
	if m != nil {
		return m.Union
	}
	return nil
}

func (m *Test) GetNumber() int32 {
	if x, ok := m.GetUnion().(*Test_Number); ok {
		return x.Number
	}
	return 0
}

func (m *Test) GetName() string {
	if x, ok := m.GetUnion().(*Test_Name); ok {
		return x.Name
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Test) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Test_Number)(nil),
		(*Test_Name)(nil),
	}
}

type Test_OptionalGroup struct {
	RequiredField        *string  `protobuf:"bytes,5,req,name=RequiredField" json:"RequiredField,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Test_OptionalGroup) Reset()         { *m = Test_OptionalGroup{} }
func (m *Test_OptionalGroup) String() string { return proto.CompactTextString(m) }
func (*Test_OptionalGroup) ProtoMessage()    {}
func (*Test_OptionalGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_c161fcfdc0c3ff1e, []int{0, 0}
}

func (m *Test_OptionalGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Test_OptionalGroup.Unmarshal(m, b)
}
func (m *Test_OptionalGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Test_OptionalGroup.Marshal(b, m, deterministic)
}
func (m *Test_OptionalGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Test_OptionalGroup.Merge(m, src)
}
func (m *Test_OptionalGroup) XXX_Size() int {
	return xxx_messageInfo_Test_OptionalGroup.Size(m)
}
func (m *Test_OptionalGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_Test_OptionalGroup.DiscardUnknown(m)
}

var xxx_messageInfo_Test_OptionalGroup proto.InternalMessageInfo

func (m *Test_OptionalGroup) GetRequiredField() string {
	if m != nil && m.RequiredField != nil {
		return *m.RequiredField
	}
	return ""
}

func init() {
	proto.RegisterEnum("example.FOO", FOO_name, FOO_value)
	proto.RegisterType((*Test)(nil), "example.Test")
	proto.RegisterType((*Test_OptionalGroup)(nil), "example.Test.OptionalGroup")
}

func init() { proto.RegisterFile("test.proto", fileDescriptor_c161fcfdc0c3ff1e) }

var fileDescriptor_c161fcfdc0c3ff1e = []byte{
	// 232 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x8f, 0xb1, 0x4b, 0xc4, 0x30,
	0x14, 0xc6, 0x2f, 0x6d, 0x72, 0xe5, 0x1e, 0x16, 0xf4, 0x71, 0x48, 0xd0, 0x25, 0x88, 0x43, 0x70,
	0xe8, 0x20, 0xc8, 0x81, 0x9b, 0x0e, 0xe7, 0x6d, 0x85, 0xe0, 0xe0, 0xda, 0xa3, 0x0f, 0x29, 0xa4,
	0x49, 0x4c, 0x53, 0xd0, 0xbf, 0xdd, 0x45, 0x5a, 0xbb, 0x74, 0x7b, 0xbf, 0xc7, 0xf7, 0xde, 0x8f,
	0x0f, 0x20, 0xd1, 0x90, 0xaa, 0x10, 0x7d, 0xf2, 0x58, 0xd0, 0x77, 0xd3, 0x07, 0x4b, 0x77, 0xbf,
	0x0c, 0xf8, 0x3b, 0x0d, 0x09, 0xf7, 0x20, 0x6c, 0x73, 0x26, 0x2b, 0x99, 0xca, 0xf4, 0xce, 0xfc,
	0x03, 0x5e, 0x03, 0x4f, 0x3f, 0x81, 0x64, 0xa6, 0x98, 0x16, 0xcf, 0xd9, 0xe1, 0x60, 0x66, 0x46,
	0x04, 0x1e, 0x29, 0x0c, 0x32, 0x57, 0xb9, 0xce, 0xcd, 0x3c, 0xe3, 0x0b, 0x94, 0x3e, 0xa4, 0xce,
	0xbb, 0xc6, 0x7e, 0x46, 0x3f, 0x06, 0xc9, 0x15, 0xd3, 0xf0, 0x78, 0x5b, 0x2d, 0xae, 0x6a, 0xf2,
	0x54, 0xf5, 0x12, 0x79, 0x9b, 0x22, 0x66, 0x7d, 0x81, 0x12, 0xb6, 0x6e, 0xec, 0xcf, 0x14, 0xe5,
	0x76, 0x12, 0x9e, 0x36, 0x66, 0x61, 0xdc, 0x03, 0x77, 0x4d, 0x4f, 0xb2, 0x50, 0x4c, 0xef, 0x4e,
	0x1b, 0x33, 0xd3, 0xcd, 0x13, 0x94, 0xab, 0x7f, 0x78, 0x0f, 0xa5, 0xa1, 0xaf, 0xb1, 0x8b, 0xd4,
	0x1e, 0x3b, 0xb2, 0xad, 0x14, 0x73, 0x9b, 0xf5, 0xf2, 0xb5, 0x00, 0x31, 0xba, 0xce, 0xbb, 0x87,
	0x0b, 0xc8, 0x8f, 0x75, 0x8d, 0x02, 0xd8, 0xc7, 0xe5, 0xd5, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff,
	0xd6, 0xc1, 0xe6, 0x22, 0x21, 0x01, 0x00, 0x00,
}
